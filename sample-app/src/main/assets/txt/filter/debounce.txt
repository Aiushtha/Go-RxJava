Observable observable=
Observable.create(
new Observable.OnSubscribe<Integer>() {
 @Override
 public void call(Subscriber<? super Integer> subscriber) {
  for (int i = 0; i < 10; i++) {
  if (!subscriber.isUnsubscribed()) {
    subscriber.onNext(i);
  }
  int sleep = 100;
  if (i % 3 == 0) {sleep = 300;}
  try {
    Thread.sleep(sleep);
  } catch (InterruptedException e) {
    e.printStackTrace();
  }
}
  subscriber.onCompleted();
}
}).subscribeOn(Schedulers.newThread());

public void runCode() {
 observable
  .debounce(2, TimeUnit.SECONDS, AndroidSchedulers.mainThread())
  .subscribeOn(AndroidSchedulers.mainThread())
  .subscribe(new Observer<Object>() {
   @Override
   public void onCompleted() {
    println("onCompleted()");
   }
   @Override
   public void onError(Throwable e) {
    println("onError()" + e);
   }
   @Override
   public void onNext(Object obj) {
     println("onNext()" + obj);
   }
 });
}